class GroupViaFingerprints < ActiveRecord::Migration
  
  # Switch to using fingerprints for grouping instead of regexes in order to
  # improve performance.
  #
  # NOTE: This change is not backwards compatible and will remove all 
  # existing data first.
  def up
    # Information about a single exception occurance.
    drop_table "exception_canary_stored_exceptions"
    create_table "exception_canary_stored_exceptions" do |t|
      t.integer :group_id, limit: 8, null: false
      t.string :fingerprint, null: false
      t.text :message
      t.string :exception_class
      t.text :backtrace
      t.text :variables
      
      # The usaer who experienced the exception, if available.
      t.integer :user_id, limit: 8
      t.string :ip_address
      
      t.timestamps null: false
    end
    add_index "exception_canary_stored_exceptions", [:group_id]
    add_index "exception_canary_stored_exceptions", [:fingerprint]
    
    # Information about a group of exceptions.
    drop_table "exception_canary_groups"
    create_table "exception_canary_groups" do |t|
      t.string :fingerprint, null: false
      t.text :name
      
      # How notifications will be made for new exceptions in this group.
      # Could be one of:
      #   IMMEDIATE
      #   DIGEST (e.g. once a day email)
      #   SUPPRESS
      t.integer :notification_action
      
      t.timestamps null: false
    end
    add_index "exception_canary_groups", [:fingerprint]
    
    # Comment about the exception or group.
    create_table "exception_canary_comments" do |t|
      t.string :commentable_type, null: false
      t.integer :commentable_id, limit: 8, null: false
      
      # Text of the comment.
      t.text :body
      
      # The usaer who created the comment. Null if the comment was 
      # generated by the system.
      t.integer :user_id, limit: 8
      
      t.timestamps null: false
    end
    add_index "exception_canary_comments", [:commentable_id, :commentable_type],
      name: "index_exception_canary_comments_on_commentable"
  end
  
  def down
    # No going back.
  end
end
